name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-2

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 1200  # Set the session duration as needed
        role-session-name: StarknetProposalsWhispererGithubAction 

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

      
    - name: Check if S3 bucket exists
      id: check-bucket
      run: |
        EXISTS=$(aws s3 ls | grep -q 'starknet-proposals-whisperer-s3' && echo 'true' || echo 'false')
        echo "BUCKET_EXISTS=$EXISTS" >> $GITHUB_ENV
      
    - name: Create S3 backend
      if: ${{ env.BUCKET_EXISTS == 'false' }}
      run: |
        cd terraform/init-backend
        terraform init
        terraform apply -auto-approve

    - name: Check if ECR repository exists
      id : check-repository
      run: |
        EXISTS=$(aws ecr describe-repositories --repository-names starknet-proposals-whisperer | grep -q 'starknet-proposals-whisperer' && echo 'true' || echo 'false')
        echo "REPOSITORY_EXISTS=$EXISTS" >> $GITHUB_ENV

    - name: Deploy ECR
      if : ${{ env.REPOSITORY_EXISTS == 'false' }}
      run: |
        cd terraform/ecr
        terraform init
        terraform apply -auto-approve

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/starknet-proposals-whisperer

    - name: Build and Push Docker image
      run: |
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/starknet-proposals-whisperer:latest .
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/starknet-proposals-whisperer:latest 

    - name: Check if Lambda function exists
      id: check-function
      run: |
        FUNCTION_EXISTS=$(aws lambda get-function --function-name starknet-proposals-whisperer || echo "false")
        echo "FUNCTION_EXISTS=$FUNCTION_EXISTS" >> $GITHUB_ENV
  
    - name: Deploy Lambda
      if: ${{ env.FUNCTION_EXISTS == 'false' }}
      run: |
        cd terraform/lambda
        terraform init
        terraform apply -auto-approve -var "ecr-repository-name=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/starknet-proposals-whisperer"
        sleep 60 # Wait for the lambda to be created

    - name: Update Lambda function
      if: ${{ env.FUNCTION_EXISTS != 'false' }}
      run: |
          aws lambda update-function-code \
            --function-name starknet-proposals-whisperer \
            --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/starknet-proposals-whisperer:latest \
            --region ${{ env.AWS_REGION }} 
            sleep 60 # Wait for the lambda to be updated
        
    - name: Update lambda configuration
      if: ${{ env.FUNCTION_EXISTS != 'false' }}
      run: |
        aws lambda update-function-configuration \
        --function-name starknet-proposals-whisperer \
        --region ${{ env.AWS_REGION }} \
        --environment Variables="{\
        SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }},\
        REPO_OWNER=${{ vars.REPO_OWNER }},\
        REPO_NAME=${{ vars.REPO_NAME }},\
        THRESHOLD_DAYS=${{ vars.THRESHOLD_DAYS }}}"

