name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # - name: Set up Go
    #   uses: actions/setup-go@v3
    #   with:
    #     go-version: 1.21.2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 1200  # Set the session duration as needed
        role-session-name: GitHubActions

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true 
        tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/starknet-proposals-whisperer:latest

    - name: Check if Lambda function exists
      id: check-function
      run: |
        FUNCTION_EXISTS=$(aws lambda get-function --function-name starknet-proposals-whisperer || echo "not-exist")
        echo "{FUNCTION_EXISTS}={$FUNCTION_EXISTS}" >> $GITHUB_ENV

    - name: Create or Update Lambda function
      run: |
        if [[ "$FUNCTION_EXISTS" == "not-exist" ]]; then
          aws lambda create-function \
            --function-name starknet-proposals-whisperer \
            --package-type Image \
            --code ImageUri=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/starknet-proposals-whisperer:latest \
        else
          aws lambda update-function-code \
            --function-name starknet-proposals-whisperer \
            --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/starknet-proposals-whisperer:latest \
            --region us-east-2 
        fi
        
    - name: Update lambda configuration
      run: |
        aws lambda update-function-configuration \
        --function-name starknet-proposals-whisperer \
        --region us-east-2 \
        --environment Variables="{\
        SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }},\
        REPO_OWNER=${{ vars.REPO_OWNER }},\
        REPO_NAME=${{ vars.REPO_NAME }},\
        THRESHOLD_DAYS=${{ vars.THRESHOLD_DAYS }}}"

