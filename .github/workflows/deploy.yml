name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # - name: Set up Go
    #   uses: actions/setup-go@v3
    #   with:
    #     go-version: 1.21.2

    - name: Configure AWS Credentials
      run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          aws configure set region us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/starknet-proposals-whisperer:latest
    
    - name: Update Lambda Function
      run: |
        aws lambda update-function-code \
          --function-name starknet-proposals-whisperer \
          --region us-east-2 \
          --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/starknet-proposals-whisperer:latest
          --environment Variables="{\
          SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }},\
          REPO_OWNER=${{ vars.REPO_OWNER }},\
          REPO_NAME=${{ vars.REPO_NAME }},\
          THRESHOLD_DAYS=${{ vars.THRESHOLD_DAYS }}}"


    # - name: Build and Compress
    #   run: |
    #       make build-linux

    # - name: Update lambda configuration
    #   run: |
    #     aws lambda update-function-configuration \
    #     --function-name starknet-proposals-whisperer \
    #     --region us-east-2 \
    #     --handler bin/whisperer \
    #     --environment Variables="{\
    #     SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }},\
    #     REPO_OWNER=${{ vars.REPO_OWNER }},\
    #     REPO_NAME=${{ vars.REPO_NAME }},\
    #     THRESHOLD_DAYS=${{ vars.THRESHOLD_DAYS }}}"

    # - name: Deploy to AWS Lambda
    #   run: |
    #       aws lambda update-function-code \
    #       --function-name starknet-proposals-whisperer \
    #       --region us-east-2 \
    #       --zip-file fileb://compressed/whisperer.zip
